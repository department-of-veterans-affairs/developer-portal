name: Generate Visual Regressions

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'What PR number needs updated visual regressions?'
        required: true
        type: string

jobs:
  update_visual_regressions:
    runs-on: ubuntu-latest
    container: cypress/included:12.8.1
    env:
      CYPRESS_SINGLE_SPEC: true
      failOnSnapshotDiff: false
    outputs:
      branch_name: ${{ steps.pr_branch.outputs.branch_name }}
      node_version: ${{ steps.node_version.outputs.node_version }}
    steps:
      - name: Install git-lfs
        run: apt update && apt install git-lfs
      - id: fetch_pr_branch
        uses: octokit/request-action@v2.x
        name: Fetch PR info
        with:
          route: GET /repos/department-of-veterans-affairs/developer-portal/pulls/${{ github.event.inputs.pr_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: pr_branch
        name: Determine PR Branch Name
        run: |
          PR_BRANCH=${{ fromJson(steps.fetch_pr_branch.outputs.data).head.ref }}
          echo $PR_BRANCH;
          echo "::set-output name=branch_name::$PR_BRANCH";
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.pr_branch.outputs.branch_name }}
          lfs: true
      - name: Unshallow the checkout
        run: git fetch --prune --unshallow
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - id: node_version
        name: Set Node Version to ENV
        run: |
          NODE_VERSION=$(node -v)
          echo $NODE_VERSION
          echo "::set-output name=node_version::$NODE_VERSION"

      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Update apt-get and install packages
        run: sudo apt-get update && sudo apt-get install -y libxss1 libxtst6 wget --no-install-recommends
      - name: Install Google apt-get key
        run: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      - name: Install Google apt-get source
        run: sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
      - name: Install Chrome and fonts
        run: sudo apt-get update && sudo apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf --no-install-recommends
      - name: Remove unnecessary files
        run: sudo rm -rf /var/lib/apt/lists/* \
          && sudo apt-get purge --auto-remove -y curl
          && sudo rm -rf /src/*.deb

      - name: Install python env
        run: |
          apt update && apt install python3 -y && ln -s /usr/bin/python3 /usr/bin/python
      - name: Install bzip2
        run: apt install bzip2

      - name: Start Fake LPB Server
        run: ./scripts/fake_lpb.sh

      - name: Delete all old snapshots
        run: rm -f test/image_snapshots/visual-regression*

      - id: visual_test
        continue-on-error: true
        name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          install-command: npm ci --legacy-peer-deps
          spec: cypress/e2e/visual.cy.js
          start: npm start
          wait-on: http://localhost:3001
          wait-on-timeout: 180

      - name: Commit new snapshots and push
        run: |
          # Change to a personal access token so that PR integration jobs run
          echo ${{ secrets.GIT_VISUAL_REGRESSIONS_COMMIT_TOKEN }} | gh auth login --with-token
          git add test/image_snapshots/*
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git commit -m "Updated visual snapshots via GitHub Actions job"
          git push origin ${{ steps.pr_branch.outputs.branch_name }}
          # After pushing the code to the PR you need to set the PR to draft and back to ready
          # for the integration tests to run. This is a custom github cli extension as native
          # support for setting a PR to draft doesn't yet exist in the official cli methods.
          gh extension install kyanny/gh-pr-draft
          gh pr-draft ${{ github.event.inputs.pr_number }}
          gh pr ready ${{ github.event.inputs.pr_number }}
