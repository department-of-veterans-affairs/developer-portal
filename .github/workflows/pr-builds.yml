name: Build Pull Request Deployment Packages

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  S3_REVIEW_BUCKET: review-developer-va-gov
  PREVIEW_SENTRY_DSN: http://dc7d5ebec20e474c80f8150c399d2955@sentry.vfs.va.gov/26

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.githash.outputs.hash }}
      pr_number: ${{ steps.pr_number.outputs.pr }}
      node_version: ${{ steps.node_version.outputs.node_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - id: node_version
        name: Set Node Version to ENV
        run: |
          NODE_VERSION=$(node -v)
          echo $NODE_VERSION
          echo "::set-output name=node_version::$NODE_VERSION"

      - id: pr_number
        name: Get PR Number
        run: |
          PR_NUMBER=`printf $GITHUB_REF | sed 's|refs/pull/||' | sed 's|/merge||'`
          echo $PR_NUMBER
          echo "::set-output name=pr::$PR_NUMBER"

      - id: githash
        name: Set git hash
        run: |
          GIT_HASH=$(/bin/bash -c "git log --oneline | cut -f3 -d \" \" | cut -c1-7")
          echo "::set-output name=hash::$GIT_HASH"

      - id: cache_node_modules
        name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
          node-version: ${{ steps.node_version.outputs.node_version }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache_node_modules.outputs.cache-hit != 'true'
        run: npm ci

  pr_builds:
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ['dev', 'staging', 'production']

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12
      - id: cache_node_modules
        name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
          node-version: ${{ needs.install.outputs.node_version }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache_node_modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Print env
        run: printenv

      - name: Run Build
        env:
          NODE_ENV: production
          BUILD_ENV: ${{matrix.environment}}
          REACT_APP_COMMIT_HASH: ${{needs.install.outputs.hash}}
        run: |
          echo "PUBLIC_URL=/$S3_REVIEW_BUCKET/gha-$REACT_APP_COMMIT_HASH/$BUILD_ENV" > .env.$BUILD_ENV.local
          echo "REACT_APP_SENTRY_DSN=$PREVIEW_SENTRY_DSN" >> .env.$BUILD_ENV.local
          npm run build $BUILD_ENV

      - name: Add deploy.json
        env:
          BUILD_ENV: ${{matrix.environment}}
          REACT_APP_COMMIT_HASH: ${{needs.install.outputs.hash}}
          PR_NUMBER: ${{needs.install.outputs.pr_number}}
        run: |
          date > ./current-date
          echo '{' > build/$BUILD_ENV/deploy.json
          echo "  \"environment\": \"$BUILD_ENV\"," >> build/$BUILD_ENV/deploy.json
          echo "  \"date\": \"$( cat current-date )\"," >> build/$BUILD_ENV/deploy.json
          echo "  \"commit\": \"$REACT_APP_COMMIT_HASH\"," >> build/$BUILD_ENV/deploy.json
          echo "  \"pr\": \"$PR_NUMBER\"" >> build/$BUILD_ENV/deploy.json
          echo '}' >> build/$BUILD_ENV/deploy.json
          rm ./current-date
          cat build/$BUILD_ENV/deploy.json

      - name: Save builds as GitHub Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pr-builds
          path: build
