######################################################################
#  Developer Portal CodeBuild CI
#
#
# Tool Links:
#  - CodeBuild - https://docs.aws.amazon.com/codebuild/index.html
#  - CodeBuild Environmental Variables - https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
#  - Runner for CodeBuild Enironment - https://github.com/department-of-veterans-affairs/lighthouse-codebuild-containers/tree/main/docker-runner
#  - AWS CLI 2.0 - https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html
#
# All Custom scripts are on the CodeBuild Environment container.
# https://github.com/department-of-veterans-affairs/lighthouse-codebuild-containers/tree/main/
#
# Custom Scripts:
#  - prnum.sh
#  - prcomment.sh
#  - slackpost.sh
#
######################################################################
version: 0.2
env:
  shell: bash
  variables:
    GITHUB_USERNAME: 'va-bot'
    # These are the test make targets.
    ENVIRONMENTS: 'dev staging production'
    # Bucket for archiving deployments
    S3_REVIEW_BUCKET: 'review-developer-va-gov'
    ## move to paramstore
    PREVIEW_SENTRY_DSN: 'http://dc7d5ebec20e474c80f8150c399d2955@sentry.vfs.va.gov/26'
    # Setting REPO
    REPO: 'developer-portal'
    # Exclude this check from CI Status
    XCHECKS: 'developer-portal-pr'
    # Running the container as root.
    UNAME: root
    GNAME: root
  parameter-store:
    GITHUB_TOKEN: '/dvp/devops/va_bot_github_token'
    DOCKER_USERNAME: '/dvp/devops/DOCKER_USERNAME'
    DOCKER_PASSWORD: '/dvp/devops/DOCKER_PASSWORD'
phases:
  install:
    commands:
      # There is considerable slow down in the provisioning phase when using Amazon provided images.
      # Therefore we use our own Alpine based image. In order to activate the Docker Daemon these lines are needed.
      - /usr/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      # Using a time variable to output at the end to aid where builds may take along time.
      - time="Start - $(date +%r)"
      # Log all environment varbiables to cloudwatch in case we need to troubleshoot. AWS is nice enough to hide any secrets from parameter-store.
      - printenv
      # Get usable branch name
      - GET_BRANCH=${CODEBUILD_WEBHOOK_HEAD_REF#"refs/heads/"}
      # set branch if not set from Webhook
      - |
        if [[ ${BRANCH} ]]; then
          echo branch set as -- ${BRANCH} -- from console
        elif [[ ${GET_BRANCH} ]]; then
          echo branch set as -- ${GET_BRANCH} -- from webhook
          BRANCH=${GET_BRANCH}
        else
          BRANCH=""
        fi
      # Make a url compliant name for S3
      - S3_BRANCH=$(echo ${BRANCH} | sed 's/\//-/g' | tr -dc [:alnum:]-_)
      # Short Ref to commit hash
      - COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - git lfs pull
      # Create the required dot files prior to build for proper deployment to review bucket
      - |
        for env in ${ENVIRONMENTS}; do
        cat <<EOF > .env.${env}.local
        PUBLIC_URL=/${S3_REVIEW_BUCKET}/${S3_BRANCH}/${COMMIT_HASH}/${env}
        REACT_APP_SENTRY_DSN=${PREVIEW_SENTRY_DSN}
        EOF
        done
        # Login to Docker Hub prior to pulling Dockerfile's base image node:12. This prevents rate limiting from Docker Hub.
      - echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
      - make build
  build:
    commands:
      - phase=build_app
      - |
        for env in ${ENVIRONMENTS}; do
          time="${time}\n${phase}-${env} - $(date +%r) - started"
          make build_app ENVIRONMENT=${env} || exit 1
        done
      - gh-status.sh -r ${REPO} -c ${COMMIT_HASH} -x ${XCHECKS}
      - phase=deploy
      - time="${time}\n${phase} - $(date +%r) started"
      - links=""
      - |
        for env in ${environments}; do
            links="${links} - [${env}](https://s3-us-gov-west-1.amazonaws.com/${s3_review_bucket}/${s3_branch}/${commit_hash}/${env}/index.html) <br>"
        done
      - aws s3 sync --no-progress --acl public-read build/ s3://${S3_REVIEW_BUCKET}/${S3_BRANCH}/${COMMIT_HASH}/
      - comment="these changes have been deployed to an s3 bucket. a build for each environment is available: <br><br> ${links} <br> due to s3 website hosting limitations in govcloud you need to first navigate to index.html explicitly."
      - |
        if [[ -n ${BRANCH} ]]
          gh pr comment ${BRANCH} --body ${comment}
        fi
