name: Notify Security Alerts
on:
  workflow_dispatch:
  schedule:
    - cron: 0 15 * * 1-5
jobs:
  check_code_scanning_alerts:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
    steps:
      - id: check
        run: |
          echo ${{ secrets.DEVPORTAL_SECURITY_SCAN_WORKFLOW_TOKEN }} | gh auth login --with-token
          gh api '/repos/department-of-veterans-affairs/developer-portal/code-scanning/alerts?state=open' \
            > code-scanning.json
          cat code-scanning.json
          if [ "[]" != "$(cat code-scanning.json)" ]; then
            echo "result='true'" >> $GITHUB_OUTPUT
          fi

  check_dependabot_alerts:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
    steps:
      - id: check
        run: |
          echo ${{ secrets.DEVPORTAL_SECURITY_SCAN_WORKFLOW_TOKEN }} | gh auth login --with-token
          gh api '/repos/department-of-veterans-affairs/developer-portal/dependabot/alerts?state=open' \
            > dependabot.json
          cat dependabot.json
          if [ "[]" != "$(cat dependabot.json)" ]; then
            echo "result='true'" >> $GITHUB_OUTPUT
          fi

  check_secret_scanning_alerts:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
    steps:
      - id: check
        run: |
          echo ${{ secrets.DEVPORTAL_SECURITY_SCAN_WORKFLOW_TOKEN }} | gh auth login --with-token
          gh api '/repos/department-of-veterans-affairs/developer-portal/secret-scanning/alerts?state=open' \
            > secret-scanning.json
          cat secret-scanning.json
          if [ "[]" != "$(cat secret-scanning.json)" ]; then
            echo "result='true'" >> $GITHUB_OUTPUT
          fi

  send_slack_message:
    runs-on: ubuntu-latest
    needs: [check_code_scanning_alerts, check_dependabot_alerts, check_secret_scanning_alerts]
    # if: needs.check_code_scanning_alerts.outputs.result == 'true' || needs.check_dependabot_alerts.outputs.result == 'true' || needs.check_secret_scanning_alerts.outputs.result == 'true'
    # env:
    #   SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    steps:
      - id: test
        run: |
          echo "1st var :: ${{needs.check_code_scanning_alerts.outputs.result}}"
          echo "2nd var :: ${{needs.check_dependabot_alerts.outputs.result}}"
          echo "3rd var :: ${{needs.check_secret_scanning_alerts.outputs.result}}"
    # - id: send_slack_message
    #   uses: slackapi/slack-github-action@v1.23.0
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    #   with:
    #     # This ID is for #team-okapi-alerts in Lighthouse Slack
    #     channel-id: C05HL4MTAFR
    #     payload: |
    #       {
    #         "text": "Developer Portal Security Alerts Check",
    #         "blocks": [
    #           {
    #             "type": "section",
    #             "text": {
    #               "type": "mrkdwn",
    #               "text": "A security vulnerability alert has been detected in the Developer Portal repository."
    #             }
    #           },
    #           {
    #             "type": "section",
    #             "text": {
    #               "type": "mrkdwn",
    #               "text": "@teamokapi please investigate."
    #             }
    #           }
    #         ]
    #       }