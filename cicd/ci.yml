version: 0.2
env:
  variables:
    GITHUB_USERNAME: "me"
    TESTS: "lint security e2e visual accesbility unit"
    ENVS: "dev staging production"
    S3_ARCHIVE_BUCKET: "liberty-codebuild-artifacts"
    S3_VISUAL_BUCKET: "liberty-codebuild-artifacts"
    S3_ERRORS_BUCKET: "liberty-codebuild-artifacts"
    S3_PR_DEPLOY_BUCKET: "liberty-codebuild-artifacts"
  parameter-store:
    GITHUB_TOKEN: "/github_token"
phases:
  install:
    commands:
      - /usr/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - bash
  pre_build:
    commands:
      # set variables
      - BRANCH=$(echo $CODEBUILD_WEBHOOK_TRIGGER | awk -F'/' '{print $2}')
      - REPO=$(echo $CODEBUILD_SOURCE_REPO_URL | sed -e 's#^https://github.com/##')
      - PR_NUM=$(prnum.sh ${REPO} ${BRANCH:-default})
      - COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - git lfs pull
      - mkdir -p reports
  build:
    commands:
      - phase=image_scan
      - ./prohibit_image_files.sh origin/master HEAD
      # run tests
      - phase=test
      - |
        for test in ${TESTS}; do
          phase=${test}
          make ${test}
        done
      # Run build if all tests are good.
      - phase=build_app
      - |
        for env in ${ENVS}; do
          make build_app ENV=dev
        done
      # upload archive
      - phase=archive
      - |
        for env in ${ENVS[@]}; do
          make archive ENV=${env}
          #deploy to s3
          aws us-gov-west-1 s3 cp --no-progress --acl public-read build/${env}.tar.bz2 s3://${S3_ARCHIVE_BUCKET}/${BRANCH}/${COMMIT_HASH}/${env}.tar.bz2
        done
      # Check if we deploy
      - |
        if [[ ${PR_NUM} ]]; then
          phase=deploy
          echo "we will do pr deploys here"
        fi
      - phase=success
  post_build:
    commands:
      # Handle phase errors. 
      - |
        case ${phase} in
        visual) 
          aws s3 cp --no-progress reports/ s3://${S3_BUCKET}/${BRANCH}/${COMMIT_HASH}/ --recursive
          links="todo"
          docsLink = 'https://github.com/department-of-veterans-affairs/developer-portal/blob/master/docs/testing.md#visual-regression-testing'
          comment="Visual regression testing failed. Review these diffs and then [update the snapshots](${docsLink}). <br><br> ${links}"
          ;;
        unit|lint|security|e2e|accessibilty)
          aws s3 cp --no-progress reports/ s3://${S3_BUCKET}/${BRANCH}/${COMMIT_HASH}/ --recursive
          comment="errors on build check url"
          ;;
        success)
          comment="good"
          ;;
        *)
          comment="not good"
          ;;
        esac
      # Handle comments
      - |
        if [[ ${PR_NUM} ]]; then
          prcomment.sh ${REPO} ${PR_NUM} "${comment:-"CI success"}"
        fi
